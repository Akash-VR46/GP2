Main = if Acyclic then yes else no
Acyclic = delete!; if {is_edge, is_loop} then fail

init (x: list) [
(n1, x # grey) | 
] => [
(n1, x:0 # grey) | 
]
interface = {n1}


delete (a, x, y: list) [
(n1, x) (n2, y) | (e1, n1, n2, a) 
] => [
(n1, x) (n2, y) | 
]
interface = {n1, n2}
where indeg(n1) = 0


is_edge (a, x, y: list) [
(n1, x) (n2, y) | (e1, n1, n2, a) 
] => [
(n1, x) (n2, y) | (e1, n1, n2, a) 
]
interface = {n1, n2}


is_loop (a, x: list) [
(n1, x) | (e1, n1, n1, a) 
] => [
(n1, x) | (e1, n1, n1, a) 
]
interface = {n1}


yes () [ | ]
=> [ (n1, "yes" # grey) | ]
interface = {}

no () [ | ]
=> [ (n1, "no" # grey) | ]
interface = {}
